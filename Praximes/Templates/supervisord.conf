;
; SUPERVISORATORRRRR
;

[unix_http_server]
file=${INSTANCE_RUN}/supervisor.sock
username=fish
password=${INSTANCE_PASSWORD}

[supervisord]
logfile=${INSTANCE_LOGS}/supervisord.log
logfile_maxbytes=50MB
logfile_backups=10
loglevel=info
pidfile=${INSTANCE_RUN}/supervisord.pid
nodaemon=false
minfds=1024
minprocs=200

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix://${INSTANCE_RUN}/supervisor.sock
prompt=${INSTANCE_NAME}-VSUPER
history_file=${INSTANCE_LOGS}/supervisorctl_history
username=fish
password=${INSTANCE_PASSWORD}

[program:postgresql]
autostart=false
command=postmaster -D ${INSTANCE_VARIANT_DATA}/postgresql
stopsignal=INT ; we use the "fast" shutdown signal SIGINT
redirect_stderr=true
priority=101
stdout_logfile_maxbytes=1MB
stdout_logfile_backups=20
stdout_logfile=${INSTANCE_LOGS}/postgresql_stdout
stderr_logfile=${INSTANCE_LOGS}/postgresql_stderr

[program:redis]
autostart=false
command=${LOCAL_BIN}/redis-server ${INSTANCE_ADNAUSEUM}/redis.conf
priority=911
directory=${INSTANCE_RUN}
stdout_logfile_maxbytes=1MB
stdout_logfile_backups=10
stdout_logfile=${INSTANCE_LOGS}/redis_stdout
stderr_logfile=${INSTANCE_LOGS}/redis_stderr

[program:memcached]
autostart=true
command=${LOCAL_BIN}/memcached -s ${INSTANCE_RUN}/memcached.sock
priority=100
stdout_logfile=${INSTANCE_LOGS}/memcached_stdout
stderr_logfile=${INSTANCE_LOGS}/memcached_stderr
redirect_stderr=false
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=10
stdout_capture_maxbytes=1MB

[program:solr]
autostart=false
directory=${LOCAL_LIB}/solr/example
command=java -jar start.jar
priority=10
stdout_logfile_maxbytes=1MB
stdout_logfile_backups=10
stdout_logfile=${INSTANCE_LOGS}/solr_stdout
stderr_logfile=${INSTANCE_LOGS}/solr_err

[program:gunicorn]
autostart=false
command=${INSTANCE_BIN}/gunicorn_django -c ${INSTANCE_ADNAUSEUM}/gunicorn-devel.py
priority=500
stdout_logfile_maxbytes=1MB
stdout_logfile_backups=20
stdout_logfile=${INSTANCE_LOGS}/gunicorn_stdout
stderr_logfile=${INSTANCE_LOGS}/gunicorn_stderr

[program:uwsgi]
autostart=true
directory=${VIRTUAL_ENV}
command=${INSTANCE_BIN}/uwsgi --ini ${INSTANCE_ADNAUSEUM}/uwsgi.ini
priority=500
stopsignal=INT
stopasgroup=true
stdout_logfile_maxbytes=1MB
stdout_logfile_backups=20
stdout_logfile=${INSTANCE_LOGS}/uwsgi_stdout
stderr_logfile=${INSTANCE_LOGS}/uwsgi_stderr

[program:reloader]
autostart=false
autorestart=false
directory=${INSTANCE}
command=${INSTANCE_BIN}/watchmedo shell-command --patterns="*.py;*.txt;*.html;*.css;*.less;*.js;*.coffee" -R --command='kill -HUP $(cat ${INSTANCE_RUN}/gunicorn.pid)' ${INSTANCE}/
priority=996
startretries=0
stdout_logfile_maxbytes=1MB
stdout_logfile_backups=10
stdout_logfile=${INSTANCE_LOGS}/reloader_stdout
stderr_logfile=${INSTANCE_LOGS}/reloader_err

[program:queue-server]
autostart=false
autorestart=true
directory=${INSTANCE}
command=${INSTANCE_BIN}/python ${INSTANCE}/manage.py runqueueserver -x --settings=settings --queuename=default localhost:11231
stdout_logfile_maxbytes=1MB
stdout_logfile_backups=10
stdout_logfile=${INSTANCE_LOGS}/queue_server_stdout
stderr_logfile=${INSTANCE_LOGS}/queue_server_stderr

[group:${INSTANCE_NAME}]
programs=postgresql,uwsgi,memcached,redis
priority=996

#!/usr/bin/env bash

# stash old path
#if [ -z ${__PATH__+$PATH} ]
#if (!)
export __PATH__="${PATH}"

export PYTHON_NUMBER=`${VIRTUAL_ENV}/bin/python -c "import platform;print '%s.%s' % platform.python_version_tuple()[:2]"`
export PYTHONPATH="\
${VIRTUAL_ENV}/lib/python${PYTHON_NUMBER}/site-packages:\
${VIRTUAL_ENV}:\
."

export VENV=$VIRTUAL_ENV
export INSTANCE="${VIRTUAL_ENV}/instance"
export LOCAL="${VIRTUAL_ENV}/local"

export INSTANCE_NAME=`echo "$(basename ${VIRTUAL_ENV})" | sed -e s/[^A-Za-z0-9]/_/g`
export INSTANCE_SAFE_NAME=${INSTANCE_NAME,,} # two commas = lowercase
export INSTANCE_SRC=`echo "$(basename ${VIRTUAL_ENV})"`
export INSTANCE_MODULE="${INSTANCE}/${INSTANCE_SAFE_NAME}"
export INSTANCE_BIN="${VIRTUAL_ENV}/bin"
export INSTANCE_LIB="${VIRTUAL_ENV}/lib"
export INSTANCE_INCLUDE="${VIRTUAL_ENV}/include"
export INSTANCE_PYTHON="${INSTANCE_LIB}/python${PYTHON_NUMBER}"
export INSTANCE_PYTHON_SITE="${INSTANCE_PYTHON}/site-packages"
export INSTANCE_ADNAUSEUM="${VIRTUAL_ENV}/etc"
export INSTANCE_VARIANT="${VIRTUAL_ENV}/var"
export INSTANCE_VARIANT_DATA="${INSTANCE_VARIANT}/db"
export INSTANCE_DEVELOPMENT_DB="${INSTANCE_VARIANT_DATA}/dev.db"
export INSTANCE_LOGS="${INSTANCE_VARIANT}/logs"
export INSTANCE_CACHE="${INSTANCE_VARIANT}/cache"
export INSTANCE_RUN="${INSTANCE_VARIANT}/run"
export INSTANCE_TMP="${INSTANCE_VARIANT}/tmp"

export LOCAL_BIN="${LOCAL}/bin"
export LOCAL_LIB="${LOCAL}/lib"
export LOCAL_INCLUDE="${LOCAL}/include"
export LOCAL_PYTHON="${LOCAL_LIB}/python${PYTHON_NUMBER}"
export LOCAL_PYTHON_SITE="${LOCAL_PYTHON}/site-packages"

export PYTHONPATH="\
${LOCAL_PYTHON_SITE}:\
${INSTANCE_MODULE}:\
${INSTANCE}:\
${INSTANCE_PYTHON_SITE}:\
${VIRTUAL_ENV}:\
."

export PATH="\
${LOCAL_BIN}:\
${INSTANCE_BIN}:\
${__PATH__}:\
."

function is_dir () { 
    (cd ${1:?pathname expected}) || return
}

function load_praxon () {
    source "${PRAXIME_BASE}/Library/${1:?praxon expected}.sh"
}

function install_praxon () {
    source "${PRAXIME_BASE}/Install/${1:?praxon expected}.sh"
}

function vremove () {
    is_dir "${VIRTUAL_ENV}/${1:?pathname expected}" && rm -rf "${VIRTUAL_ENV}/${1}"
}

# prepare download bash funcs
load_praxon "01-download"
load_praxon "02-urlcache"

# These may be referencing things that do not yet exist
export DJANGO_VERSION="1.6.2"
export DJANGO_SETTINGS_MODULE="settings" # NOT A MADE UP VARIABLE
export DJANGO_ADMIN="${INSTANCE_BIN}/django-admin.py"
export DJANGO_ADMINSITE_USER="admin"

export SUPERVISORD_CONF="${INSTANCE_ADNAUSEUM}/supervisord.conf"
export SUPERVISORD="${INSTANCE_BIN}/supervisord -n -c ${SUPERVISORD_CONF}"
export SUPERVISORCTL="${INSTANCE_BIN}/supervisorctl -c ${SUPERVISORD_CONF}"

export PRAXON_TEMPLATES="${PRAXIME_BASE}/Templates"
export TEMPLATES=$PRAXON_TEMPLATES

# we may not install Solr, but these will be defined nonetheless
# (... maybe don't do that?)
export SOLR_ROOT="${LOCAL_LIB}/solr"
export SOLR_CONF="${SOLR_ROOT}/example/solr/collection1/conf"
export SOLR_SCHEMA="${SOLR_CONF}/schema.xml"
export SOLR_CONFIG="${SOLR_CONF}/solrconfig.xml"
export SOLR_STOPWORDS="${SOLR_CONF}/stopwords.txt"
export SOLR_STOPWORDS_EN="${SOLR_CONF}/stopwords_en.txt"
export SOLR_LIRE_SCHEMA_PATCH="${INSTANCE_ADNAUSEUM}/solr-lire-schema-fields.patch"

export PROCFILE="${VIRTUAL_ENV}/Procfile"
export MAKEFILE="${VIRTUAL_ENV}/Makefile"
export HONCHO="${INSTANCE_BIN}/honcho -f ${PROCFILE}"
export INSTANCE_REDIS_CONF="${INSTANCE_ADNAUSEUM}/redis.conf"
export INSTANCE_BPYTHON_SETTINGS="${INSTANCE_ADNAUSEUM}/bpython-settings.py"
export IPYTHONDIR="${INSTANCE_ADNAUSEUM}/ipython" # NOT A MADE UP VARIABLE